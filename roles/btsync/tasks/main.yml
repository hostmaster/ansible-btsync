---

- name: This playbook is for Ubuntu only so far
  fail: msg="this is Ubuntu only sorry"
  when: ansible_distribution != 'Ubuntu'
  
- name: Create folder for binary
  file: path="{{ btsync_dist  }}"
        owner=root group=root mode=0755
        state=directory

- name: Download btsync tarball
  get_url: url="{{ btsync_url[ansible_architecture] }}"
           dest=/var/tmp/btsync.tgz

- name: Unzip btsync binary
  shell: tar xz -C "{{ btsync_dist }}" -f /var/tmp/btsync.tgz btsync

- name: Create user 
  user: name="{{ btsync_user }}"
        shell="{{ btsync_shell }}"
        state=present
        system=no
 
- name: Create home folder and shares 
  file: path="{{ item.dir }}"
        owner="{{ btsync_user }}" group="{{ btsync_user }}" mode=0755
        state=directory
  with_items:
    - { dir: "{{ btsync_home }}" }
    - { dir: "{{ btsync_home }}/.sync" }
    - ${btsync_shared_folders}
  when: item is defined and item.dir
    
- name: Template btsync configuration file
  template: src=btsync.conf.j2
            dest="{{ btsync_conf }}"
            owner="{{ btsync_user }}" group="{{ btsync_user }}" mode=0640
            backup=yes 
  notify:
    - restart btsync

- name: Template ufw configuration
  template: src=ufw.j2
            dest=/etc/ufw/applications.d/btsync
            owner=root group=root mode=0640
            backup=yes 
  notify:
    - reload ufw

- name: Template upstart configuration
  template: src=upstart.j2
            dest=/etc/init/btsync.conf
            owner=root group=root mode=0640 backup=yes 
  notify:
    - restart btsync

- name: Get UFW status output
  command: ufw status 
  register: ufw_status

- debug: msg="Is firewall enabled"
  register: ufw_is_enabled
  when: ufw_status.stdout is defined and
        ufw_status.stdout.find("inactive") != -1 

- name: Configure firewall
  command: ufw allow 'BTSync' 
  notify: reload ufw
  when: ufw_is_enabled
  
- name: Check for btsync process
  command: pgrep -fc btsync
  ignore_errors: yes
  register: pgrep

- name: Start btsync 
  command: "start btsync"
  when: pgrep.rc > 0

- name: Encure btsync service is up and running 
  service: name=btsync state=started
